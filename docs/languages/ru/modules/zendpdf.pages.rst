.. EN-Revision: none
.. _zendpdf.pages:

Страницы документа
==================

Абстракция страницы документа PDF представлена классом
*ZendPdf\Page*.

Страницы PDF либо загружаются из существующего документа PDF,
либо создаются.

Новая страница может быть получена посредством создания
нового объекта *ZendPdf\Page* или вызова метода *ZendPdf\PdfDocument::newPage()*, который
возвращает объект *ZendPdf\Page*. Их различие в том, что метод
*ZendPdf\PdfDocument::newPage()* создает страницу, уже прикрепленную к документу. В
отличие от неприкрепленой, она не может использоваться с
несколькими документами PDF, но имеет несколько лучшую
производительность. [#]_. Какой подход использовать — решать
вам.

Метод *ZendPdf\PdfDocument::newPage()* и конструктор *ZendPdf\Page* принимают одинаковый
набор параметров. Это либо размер страницы ($x, $y) в пойнтах (1pt =
1/72 inch), либо предопределенная константа, которая трактуется
как тип страницы:

   - ZendPdf\Const::PAGESIZE_A4

   - ZendPdf\Const::PAGESIZE_A4_LANDSCAPE

   - ZendPdf\Const::PAGESIZE_LETTER

   - ZendPdf\Const::PAGESIZE_LETTER_LANDSCAPE



Страницы документа хранятся в открытом члене ``$pages`` класса
*ZendPdf*. Это массив объектов *ZendPdf\Page*. Он полностью описывает
набор и порядок страниц документа и с ним можно работать, как с
обычным массивом:

.. rubric:: Управление страницами документа PDF

.. code-block:: php
   :linenos:

   <?php
   ...
   // Изменение порядка страниц на противоположный
   $pdf->pages = array_reverse($pdf->pages);
   ...
   // Добавление новой страницы
   $pdf->pages[] = new Zend\Pad\Page(ZendPdf\Const::PAGESIZE_A4);
   // Добавление новой страницы
   $pdf->pages[] = $pdf->newPage(ZendPdf\Const::PAGESIZE_A4);

   // Удаление определенной страницы
   unset($pdf->pages[$id]);

   ...
   ?>


.. [#] Имеется ограничение версии V1.0 модуля ZendPdf. Она будет
       устранена в будущих версиях. Но неприкрепленные страницы
       всегда дают лучший (более оптимальный) результат при
       совместном использовании в нескольких документах.