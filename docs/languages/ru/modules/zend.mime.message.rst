.. EN-Revision: none
.. _zend.mime.message:

Zend\Mime\Message
=================

.. _zend.mime.message.introduction:

Введение
--------

``Zend\Mime\Message`` представляет сообщения, составленные в
соответствии со спецификациями *MIME*, такие сообщения могут
содержать одну или более отдельных частей, представляемых как
объекты класса :ref:`Zend\Mime\Part <zend.mime.part>`). С помощью ``Zend\Mime\Message`` из
объектов ``Zend\Mime\Part`` могут быть сгенерированы сообщения MIME
multipart. Также с помощью этого класса производится прозрачное
управление кодированием и разделителями. Объекты ``Zend\Mime\Message``
могут быть восстановлены из данных строк (экспериментальная
возможность). Используется :ref:`Zend_Mail <zend.mail>`-ом.

.. _zend.mime.message.instantiation:

Инстанцирование
---------------

Нет явного конструктора для ``Zend\Mime\Message``.

.. _zend.mime.message.addparts:

Добавление частей MIME
----------------------

Объекты :ref:`Zend\Mime\Part <zend.mime.part>` могут быть добавлены в
конкретный объект ``Zend\Mime\Message`` путем вызова *->addPart($part)*.

Массив со всеми объектами частей :ref:`Zend\Mime\Part <zend.mime.part>` в
``Zend\Mime\Message`` возвращается методом *->getParts()*. Через этот массив
можно вносить изменения в объекты частей, поскольку они
хранятся в виде ссылок. Если в массив были добавлены новые
части или последовательность изменилась, то массив нужно
заново передать объекту :ref:`Zend\Mime\Part <zend.mime.part>` через вызов
метода *->setParts($partsArray)*.

Функция *->isMultiPart()* вернет ``TRUE``, если была зарегистрирована
более чем одна часть в объекте ``Zend\Mime\Message`` и, следовательно,
объект должен сгенерировать сообщение MIME multipart.

.. _zend.mime.message.bondary:

Управление разделителями
------------------------

``Zend\Mime\Message`` обычно создает и использует свой объект ``Zend_Mime``
для генерации разделителей. Если нужно самостоятельно
установить разделители или изменить поведение объекта
``Zend_Mime``, используемого ``Zend\Mime\Message``, то можно самостоятельно
создать экземпляр ``Zend_Mime`` и зарегистрировать его в ``Zend\Mime\Message``
(но обычно вам не нужно делать это). Метод *->setMime(Zend_Mime $mime)*
устанавливает специальный экземпляр *Zend_Mime*, который будет
использоваться данным объектом ``Zend\Mime\Message``.

*->getMime()* возвращает экземпляр класса ``Zend_Mime``, который будет
использоваться для формирования сообщения при вызове метода
``generateMessage()``.

*->generateMessage()* формирует содержимое ``Zend\Mime\Message`` в строке.

.. _zend.mime.message.parse:

Создание объекта Zend\Mime\Message из строки (экспериментальная возможность)
----------------------------------------------------------------------------

Если имеется сообщение MIME в виде строки, то оно может
использоваться для получения объекта ``Zend\Mime\Message``. ``Zend\Mime\Message``
имеет фабричный метод, который принимает строку и возвращает
объект ``Zend\Mime\Message``.

``Zend\Mime\Message::createFromMessage($str, $boundary)`` декодирует переданную строку и
возвращает объект ``Zend\Mime\Message``, который затем может быть
исследован с помощью *->getParts()*.


