.. _zend.debug.dumping:

Дамп переменных
===============

Статический метод *Zend_Debug::dump()* выводит или возвращает
информацию о выражении. Это простая техника отладки довольно
распространена, поскольку ее легко использовать
применительно к случаю, и она не требует какой-либо
предварительной инициализации, специальных инструментов или
отладочной среды.

.. _zend.debug.dumping.example:

.. rubric:: Пример использования метода dump()

.. code-block:: php
   :linenos:

   Zend_Debug::dump($var, $label=null, $echo=true);

Аргумент ``$var`` соответствует выражению или переменной,
информацию о которой должен вывести метод *Zend_Debug::dump()*.

Аргумент ``$label`` (заголовок) является строкой, которая должна
предшествовать выводу метода *Zend_Debug::dump()*. Использование
заголовков может быть полезным в некоторых случаях - например,
при выводе информации о нескольких переменных на одном экране.

Булев аргумент ``$echo`` определяет, должен ли быть отображен
вывод метода *Zend_Debug::dump()* или нет. Если он равен ``TRUE``, то вывод
будет отображен. Независимо от значения этого аргумента,
возвращаемое методом значение будет содержать его вывод.

Может быть небесполезным знать, что метод *Zend_Debug::dump()* является
оберткой ко встроенной функции PHP `var_dump()`_. Если поток вывода
определен как веб-представление, то вывод *var_dump()* будет
экранирован с помощью функции `htmlspecialchars()`_ и окружен (X)HTML
тегами *<pre>*.

.. tip::

   **Отладка с применением Zend_Log**

   *Zend_Debug::dump()* хорошо применять для отладки во время разработки
   приложения. Вы можете быстро добавлять код для дампа
   переменной и удалять его.

   Также рассмотрите возможность использования компоненты
   :ref:`Zend_Log <zend.log.overview>` при написании более долговременного
   отладочного кода. Например, вы можете использовать уровень
   журналирования *DEBUG* и регистратор Zend_Log_Writer_Stream для вывода
   строки, возвращенной *Zend_Debug::dump()*.



.. _`var_dump()`: http://php.net/var_dump
.. _`htmlspecialchars()`: http://php.net/htmlspecialchars
